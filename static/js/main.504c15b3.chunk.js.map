{"version":3,"sources":["components/landingpage.js","components/skills.js","components/aboutme.js","components/project.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Landingpage","style","width","margin","className","col","src","alt","href","rel","target","aria-hidden","Component","Skills","class","Aboutme","Project","shadow","minWidth","color","height","background","border","colored","Main","exact","path","component","landingpage","skills","aboutme","experience","project","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.504c15b3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Grid, Cell} from 'react-mdl';\nclass Landingpage extends Component {\n  render() {\n    return(\n      <div style={{width: '100%', margin: 'auto'}}>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <img\n              src=\"https://raw.githubusercontent.com/sukriti1/Sukriti_Bhardwaj/master/image.jpg\"\n              alt=\"my-image\"\n              className=\"my-img\"\n              />\n            <div className = \"ban\">\n                <h1>Sukriti Bhardwaj</h1>\n                <div className = \"social\">\n                <a href = \"https://www.linkedin.com/in/bhardwaj-sukriti/\" rel = \"noopenner noreferrer\" target = \"_blank\">\n                    <i className = \"fa fa-linkedin-square\" aria-hidden = \"true\" />\n                </a>\n                <a href = \"https://github.com/sukriti1\" rel = \"noopenner noreferrer\" target = \"_blank\">\n                    <i className = \"fa fa-github-square\" aria-hidden = \"true\" />\n                </a>\n                <a href = \"mailto:sukriti1.bhardwaj@gmail.com\" rel = \"noopenner noreferrer\" target = \"_blank\">\n                    <i className=\"fa fa-envelope\" aria-hidden=\"true\"/>\n                </a>\n                </div>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Landingpage;","import React, { Component } from 'react';\nclass Skills extends Component{\n    render(){\n        return (\n            <div class=\"resume\">\n            <img\n            src=\"https://raw.githubusercontent.com/sukriti1/Sukriti_Bhardwaj/master/bhardwaj_sukriti-page-0.jpg\"\n            alt=\"resumeimg\"\n            class=\"res\"\n            />\n            </div>\n        )\n    }\n}\nexport default Skills","import React, { Component } from 'react';\nclass Aboutme extends Component{\n    render() {\n        return(\n            <div class=\"back\">\n            <img\n            src=\"https://raw.githubusercontent.com/sukriti1/Sukriti_Bhardwaj/master/suki.jpg\"\n            alt=\"trainimg\"\n            class=\"center\" \n            />\n            \n            <p class=\"aboutme-paragraph\">\n                Hey, I am Sukriti and I am an undergraduate rising junior at Georgia Tech. My concentration in computer science is on media which deals with graphics and computer animation and artificial intelligence.\n                On the coding side, I am involved in research. I was a part of sonification lab where I worked on a project based on human robot interaction and currently I am a part of the computational behavioral analysis lab where I am working on a machine learning project. I also like to help others by sharing my knowledge. Teaching has always been my passion and I am a tutor at the college of computing.I have\n                also had some great industry experience. Last summer, I interned in the Qatar Computing research institute on traffic lights and simulation and this summer I am interning at IBM cloud. I am very interested in Natural Language Processing and cloud.\n                Computer Science is a vast field and I love exploring the different aspects of it!\n            </p>\n            <p class=\"abut-2\">\n                On the non-techincal side, I am involved in Girls who code and Rewriting the code, where I mentoring high school females transitioning into college. I am also a part of Epic Intentions, where I helped a non-profit build their website!\n                I am also involved in a living learning community called Global Leadership which helps educate others about the UN sustainable goals and works towards them. Apart from these, I enjoy drawing, reading and cooking.\n                I would describe myself as someone who is a leader, excellent communicator, team player, inquisitive and passionate about learning!\n            </p>\n\n            </div>\n            \n        )\n\n        \n    }\n}\n\nexport default Aboutme;","import React, { Component } from 'react';\nimport {Card, CardTitle, CardText, CardActions, Button, CardMenu} from 'react-mdl';\nclass Project extends Component{\n    render(){\n        return (\n            <div className = \"biggie\">   \n            <div className = \"big-div\">\n            <div className = \"projects-grid\">\n                <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n            <CardTitle style={{color: 'black', height: '176px', background: 'url(https://raw.githubusercontent.com/sukriti1/Sukriti_Bhardwaj/master/photon.png) center / cover'}} ></CardTitle>\n            <CardText>\n                <h3>Railway Management System</h3>\n              This a real-time animated railway management program to find the optimal railway routes and keep track of 50+ incoming and outgoing passengers. The seating of the train is visible. Additional features include a meal plan and live weather detection .\n            </CardText>\n            <CardActions border>\n            <a href = \"https://github.com/sukriti1/Railway-Management-System\" rel=\"noopener noreferrer\" target=\"_blank\"><Button colored>Github</Button></a>\n            </CardActions>\n            <CardMenu style={{color: '#fff'}}>\n            </CardMenu>\n          </Card>\n            <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n            <CardTitle style={{color: 'black', height: '176px', background: 'url(https://olliconnects.org/wp-content/uploads/2018/11/wordcloud-butterfly.jpg) center / cover'}} ></CardTitle>\n            <CardText>\n                <h3>Reverse Sentiment Analysis</h3>\n                This is based of a kaggle challenge, where we are given the sentiment of the sentence and we find the part of the sentence that gives this sentiment. This was done using the BERT model and making some changes in the algorithm.This was my first NLP project and it was super fun!\n            </CardText>\n            <CardActions border>\n            <a href = \"https://github.com/vtrivedi7/SentimentSource\" rel=\"noopener noreferrer\" target=\"_blank\"><Button colored>Github</Button></a>\n            </CardActions>\n            <CardMenu style={{color: '#fff'}}>\n            </CardMenu>\n            </Card>\n            <br />\n            <br />\n            </div>\n            <div className = \"haha\">\n                <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n            <CardTitle style={{color: 'black', height: '176px', background: 'url(https://user-images.githubusercontent.com/34989177/35237313-9df2b2ec-ffaa-11e7-84d6-739c6129d9cb.png) center / cover'}} ></CardTitle>\n            <CardText>\n                <h3>Paint World</h3>\n                This is a replication of our favorite paint made using Java Fx. It has most of the paint features like coloring, painting, erasing and adding text.\n            </CardText>\n            <CardActions border>\n            <a href = \"https://github.com/sukriti1/Paint\" rel=\"noopener noreferrer\" target=\"_blank\"><Button colored>Github</Button></a>\n            </CardActions>\n            <CardMenu style={{color: '#fff'}}>\n            </CardMenu>\n          </Card>\n\n\n            <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n            <CardTitle style={{color: 'black', height: '176px', background: 'url(https://raw.githubusercontent.com/sukriti1/Sukriti_Bhardwaj/master/Screen%20Shot%202020-06-08%20at%207.14.52%20PM.png) center / cover'}} ></CardTitle>\n            <CardText>\n                <h3>Yelpify</h3>\n                This was my first react application that makes use of Html,CSS and javascript and it makes use of the yelp api. Its features include searching for restaurants as a user and sorting the results.\n            </CardText>\n            <CardActions border>\n            <a href = \"https://github.com/sukriti1/FoodStore\" rel=\"noopener noreferrer\" target=\"_blank\"><Button colored>Github</Button></a>\n            </CardActions>\n            <CardMenu style={{color: '#fff'}}>\n            </CardMenu>\n            </Card>\n            </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default Project;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport landingpage from './landingpage';\nimport skills from './skills';\nimport aboutme from './aboutme';\nimport experience from './experience';\nimport project from './project';\nconst Main = () => (\n    <Switch>\n        <Route exact path = \"/\" component = {landingpage} />\n        <Route path = \"/landingpage\" component = {landingpage} />\n        <Route path = \"/skills\" component = {skills} />\n        <Route path = \"/aboutme\" component = {aboutme}/>\n        <Route path = \"/experience\" component = {experience}/>\n        <Route path = \"/project\" component = {project} />\n    </Switch>\n)\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer,Content} from 'react-mdl';\nimport {Link} from 'react-router-dom';\nimport Main from './components/main'\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <Header className = \"header-col\" title=\"Sukritibhardwaj\" scroll>\n            <Navigation>\n                <Link to=\"/landingpage\">Home</Link>\n                <Link to=\"/aboutme\">About me</Link>\n                <Link to=\"/skills\">Experience</Link>\n                <Link to=\"/project\">Projects</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Sukritibhardwaj\">\n            <Navigation>\n                <Link to=\"/landingpage\">Home</Link>\n                <Link to=\"/aboutme\">About me</Link>\n                <Link to=\"/skills\">Experience</Link>\n                <Link to=\"/project\">Projects</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename='/sukriti1.github.io'>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}